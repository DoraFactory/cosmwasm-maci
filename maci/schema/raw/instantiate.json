{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "coordinator",
    "maci_denom",
    "parameters",
    "process_vkey",
    "qtr_lib",
    "round_description",
    "round_id",
    "tally_vkey"
  ],
  "properties": {
    "coordinator": {
      "$ref": "#/definitions/PubKey"
    },
    "maci_denom": {
      "type": "string"
    },
    "parameters": {
      "$ref": "#/definitions/MaciParameters"
    },
    "process_vkey": {
      "$ref": "#/definitions/VKeyType"
    },
    "qtr_lib": {
      "$ref": "#/definitions/QuinaryTreeRoot"
    },
    "round_description": {
      "type": "string"
    },
    "round_id": {
      "type": "string"
    },
    "tally_vkey": {
      "$ref": "#/definitions/VKeyType"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "MaciParameters": {
      "type": "object",
      "required": [
        "int_state_tree_depth",
        "message_batch_size",
        "state_tree_depth",
        "vote_option_tree_depth"
      ],
      "properties": {
        "int_state_tree_depth": {
          "$ref": "#/definitions/Uint256"
        },
        "message_batch_size": {
          "$ref": "#/definitions/Uint256"
        },
        "state_tree_depth": {
          "$ref": "#/definitions/Uint256"
        },
        "vote_option_tree_depth": {
          "$ref": "#/definitions/Uint256"
        }
      },
      "additionalProperties": false
    },
    "PubKey": {
      "type": "object",
      "required": [
        "x",
        "y"
      ],
      "properties": {
        "x": {
          "$ref": "#/definitions/Uint256"
        },
        "y": {
          "$ref": "#/definitions/Uint256"
        }
      },
      "additionalProperties": false
    },
    "QuinaryTreeRoot": {
      "type": "object",
      "required": [
        "zeros"
      ],
      "properties": {
        "zeros": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Uint256"
          },
          "maxItems": 9,
          "minItems": 9
        }
      },
      "additionalProperties": false
    },
    "Uint256": {
      "description": "An implementation of u256 that is using strings for JSON encoding/decoding, such that the full u256 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances out of primitive uint types or `new` to provide big endian bytes:\n\n``` # use cosmwasm_std::Uint256; let a = Uint256::from(258u128); let b = Uint256::new([ 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 2u8, ]); assert_eq!(a, b); ```",
      "type": "string"
    },
    "VKeyType": {
      "type": "object",
      "required": [
        "vk_alpha1",
        "vk_beta_2",
        "vk_delta_2",
        "vk_gamma_2",
        "vk_ic0",
        "vk_ic1"
      ],
      "properties": {
        "vk_alpha1": {
          "type": "string"
        },
        "vk_beta_2": {
          "type": "string"
        },
        "vk_delta_2": {
          "type": "string"
        },
        "vk_gamma_2": {
          "type": "string"
        },
        "vk_ic0": {
          "type": "string"
        },
        "vk_ic1": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
