{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "set_params"
      ],
      "properties": {
        "set_params": {
          "type": "object",
          "required": [
            "int_state_tree_depth",
            "message_batch_size",
            "state_tree_depth",
            "vote_option_tree_depth"
          ],
          "properties": {
            "int_state_tree_depth": {
              "$ref": "#/definitions/Uint256"
            },
            "message_batch_size": {
              "$ref": "#/definitions/Uint256"
            },
            "state_tree_depth": {
              "$ref": "#/definitions/Uint256"
            },
            "vote_option_tree_depth": {
              "$ref": "#/definitions/Uint256"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "sign_up"
      ],
      "properties": {
        "sign_up": {
          "type": "object",
          "required": [
            "pubkey"
          ],
          "properties": {
            "pubkey": {
              "$ref": "#/definitions/PubKey"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "stop_voting_period"
      ],
      "properties": {
        "stop_voting_period": {
          "type": "object",
          "required": [
            "max_vote_options"
          ],
          "properties": {
            "max_vote_options": {
              "$ref": "#/definitions/Uint256"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "publish_message"
      ],
      "properties": {
        "publish_message": {
          "type": "object",
          "required": [
            "enc_pub_key",
            "message"
          ],
          "properties": {
            "enc_pub_key": {
              "$ref": "#/definitions/PubKey"
            },
            "message": {
              "$ref": "#/definitions/Message"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "process_message"
      ],
      "properties": {
        "process_message": {
          "type": "object",
          "required": [
            "new_state_commitment",
            "proof"
          ],
          "properties": {
            "new_state_commitment": {
              "$ref": "#/definitions/Uint256"
            },
            "proof": {
              "$ref": "#/definitions/ProofType"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "stop_processing_period"
      ],
      "properties": {
        "stop_processing_period": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "process_tally"
      ],
      "properties": {
        "process_tally": {
          "type": "object",
          "required": [
            "new_tally_commitment",
            "proof"
          ],
          "properties": {
            "new_tally_commitment": {
              "$ref": "#/definitions/Uint256"
            },
            "proof": {
              "$ref": "#/definitions/ProofType"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "stop_tallying_period"
      ],
      "properties": {
        "stop_tallying_period": {
          "type": "object",
          "required": [
            "results",
            "salt"
          ],
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Uint256"
              }
            },
            "salt": {
              "$ref": "#/definitions/Uint256"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Message": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Uint256"
          },
          "maxItems": 7,
          "minItems": 7
        }
      },
      "additionalProperties": false
    },
    "ProofType": {
      "type": "object",
      "required": [
        "a",
        "b",
        "c"
      ],
      "properties": {
        "a": {
          "type": "string"
        },
        "b": {
          "type": "string"
        },
        "c": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PubKey": {
      "type": "object",
      "required": [
        "x",
        "y"
      ],
      "properties": {
        "x": {
          "$ref": "#/definitions/Uint256"
        },
        "y": {
          "$ref": "#/definitions/Uint256"
        }
      },
      "additionalProperties": false
    },
    "Uint256": {
      "description": "An implementation of u256 that is using strings for JSON encoding/decoding, such that the full u256 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances out of primitive uint types or `new` to provide big endian bytes:\n\n``` # use cosmwasm_std::Uint256; let a = Uint256::from(258u128); let b = Uint256::new([ 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 2u8, ]); assert_eq!(a, b); ```",
      "type": "string"
    }
  }
}
